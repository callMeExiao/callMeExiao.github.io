import{_ as a,c as n,b as p,o as e}from"./app-DqRurxSm.js";const c="/assets/img-BwRJ0xDQ.png",l={};function i(t,s){return e(),n("div",null,[...s[0]||(s[0]=[p('<h2 id="问题背景" tabindex="-1"><a class="header-anchor" href="#问题背景"><span>问题背景</span></a></h2><p><img src="'+c+`" alt="img.png" loading="lazy"> 在这个场景下需要点击一次提交按钮（绿色圆形按钮）即可完成表单的提交与附件的上传</p><p>但是element-plus的el-upload组件的上传是对每个附件调用一次“上传请求方法”</p><p>那么有没有什么办法能在提交的时候完成附件上传并且将附件的url随着表单返回给后端呢？</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><h3 id="逻辑链" tabindex="-1"><a class="header-anchor" href="#逻辑链"><span>逻辑链</span></a></h3><ol><li>点击提交按钮触发表单提交方法</li><li>触发图片上传</li><li>上传成功回调</li><li>上传是对每个附件调用一次上传请求</li><li>提交表单</li></ol><h3 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span>//</span><span class="space"> </span><span>表单提交按钮</span></span>
<span class="line"><span>&lt;el-button</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>circle</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>icon=&quot;Check&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>type=&quot;success&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>1.点击提交按钮触发表单提交方法</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>@click=&quot;handleQualificationSave(newRow)&quot;</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//</span><span class="space"> </span><span>表单提交方法</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>handleQualificationSave</span><span class="space"> </span><span>=</span><span class="space"> </span><span>(newRow)</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>新增行字段验证</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>验证通过</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>2.触发图片上传</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>这里submit触发el-upload组件上传请求</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>即el-upload的action属性里的url</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>imgUploadRef.value!.submit();</span></span>
<span class="line"><span>};</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//</span><span class="space"> </span><span>附件上传组件</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>imgUploadRef</span><span class="space"> </span><span>=</span><span class="space"> </span><span>ref&lt;UploadInstance&gt;()</span></span>
<span class="line"><span>&lt;el-upload</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>ref=&quot;imgUploadRef&quot;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>:action=&quot;uploadUrl&quot;//</span><span class="space"> </span><span>上传地址</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>:auto-upload=&quot;false&quot;//</span><span class="space"> </span><span>关闭自动上传</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>:multiple=&quot;true&quot;//</span><span class="space"> </span><span>允许上传多个文件</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>@success=&quot;handleImageSuccess&quot;//</span><span class="space"> </span><span>3.上传成功回调</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//</span><span class="space"> </span><span>上传成功回调</span></span>
<span class="line"><span>//</span><span class="space"> </span><span>@success是action属性里的url成功后的回调</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>route</span><span class="space"> </span><span>=</span><span class="space"> </span><span>useRoute();</span><span class="space"> </span><span>//</span><span class="space"> </span><span>获取路由参数</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>newRow</span><span class="space"> </span><span>=</span><span class="space"> </span><span>reactive({});</span><span class="space"> </span><span>//</span><span class="space"> </span><span>表单新增行的数据</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>uploadedUrls:</span><span class="space"> </span><span>string[]</span><span class="space"> </span><span>=</span><span class="space"> </span><span>[];</span><span class="space"> </span><span>//</span><span class="space"> </span><span>用于存储每个上传文件返回的</span><span class="space"> </span><span>URL</span></span>
<span class="line"><span>let</span><span class="space"> </span><span>uploadedCount</span><span class="space"> </span><span>=</span><span class="space"> </span><span>0;</span><span class="space"> </span><span>//</span><span class="space"> </span><span>已上传文件数</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>handleImageSuccess</span><span class="space"> </span><span>=</span><span class="space"> </span><span>(response:</span><span class="space"> </span><span>UploadResponse,</span><span class="space"> </span><span>uploadFile,</span><span class="space"> </span><span>uploadFiles)</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>4.上传是对每个附件调用一次上传请求</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>所以我拼接上传成功后返回的</span><span class="space"> </span><span>URL</span><span class="space"> </span><span>作为表单属性attachmentsUrl</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>当所有附件上传成功后才触发表单提交</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>uploadedUrls.push(response.url);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>uploadedCount++;</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>if</span><span class="space"> </span><span>(uploadedCount</span><span class="space"> </span><span>===</span><span class="space"> </span><span>uploadFiles.length)</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>newRow.attachmentsUrl</span><span class="space"> </span><span>=</span><span class="space"> </span><span>uploadedUrls.join(&#39;,&#39;);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>newRow.companyId</span><span class="space"> </span><span>=</span><span class="space"> </span><span>route.query.id?.toString();</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>5.提交表单</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>qualificationSave(newRow);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//</span><span class="space"> </span><span>提交表单</span></span>
<span class="line"><span>const</span><span class="space"> </span><span>qualificationSave</span><span class="space"> </span><span>=</span><span class="space"> </span><span>(row)</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>调用后端接口保存数据</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>addQualification(row).then(()</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>ElMessage.success(&quot;信息保存成功&quot;);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>重新获取数据</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>//</span><span class="space"> </span><span>清空新增行数据</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>...</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>}).catch((error)</span><span class="space"> </span><span>=&gt;</span><span class="space"> </span><span>{</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span class="space"> </span><span class="space"> </span><span>ElMessage.error(&quot;资质信息保存失败&quot;);</span></span>
<span class="line"><span class="space"> </span><span class="space"> </span><span>});</span></span>
<span class="line"><span>};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="simple-and-clear-hope-so" tabindex="-1"><a class="header-anchor" href="#simple-and-clear-hope-so"><span>Simple and Clear(hope so)</span></a></h5>`,11)])])}const r=a(l,[["render",i]]),o=JSON.parse(`{"path":"/article/vue3-elementplus-file-form-submit/","title":"一键提交表单与附件","lang":"zh-CN","frontmatter":{"title":"一键提交表单与附件","tags":["vue3","element-plus"],"createTime":"2025/03/07 16:16:32","permalink":"/article/vue3-elementplus-file-form-submit/","keywords":["Vue3文件上传","Element Plus表单整合","前后端数据混合提交"],"description":"问题背景 img.png 在这个场景下需要点击一次提交按钮（绿色圆形按钮）即可完成表单的提交与附件的上传 但是element-plus的el-upload组件的上传是对每个附件调用一次“上传请求方法” 那么有没有什么办法能在提交的时候完成附件上传并且将附件的url随着表单返回给后端呢？ 解决方案 逻辑链 点击提交按钮触发表单提交方法 触发图片上传 上传...","head":[["meta",{"property":"og:url","content":"https://callmeexiao.baby/article/vue3-elementplus-file-form-submit/"}],["meta",{"property":"og:site_name","content":"Exiao's Blog"}],["meta",{"property":"og:title","content":"一键提交表单与附件"}],["meta",{"property":"og:description","content":"问题背景 img.png 在这个场景下需要点击一次提交按钮（绿色圆形按钮）即可完成表单的提交与附件的上传 但是element-plus的el-upload组件的上传是对每个附件调用一次“上传请求方法” 那么有没有什么办法能在提交的时候完成附件上传并且将附件的url随着表单返回给后端呢？ 解决方案 逻辑链 点击提交按钮触发表单提交方法 触发图片上传 上传..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-19T03:44:49.000Z"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:tag","content":"element-plus"}],["meta",{"property":"article:modified_time","content":"2025-04-19T03:44:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一键提交表单与附件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-19T03:44:49.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.93,"words":578},"git":{"updatedTime":1745034289000,"contributors":[{"name":"金逸霄","username":"金逸霄","email":"574355578@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/金逸霄?v=4","url":"https://github.com/金逸霄"},{"name":"Exiao","username":"Exiao","email":"574355578@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/Exiao?v=4","url":"https://github.com/Exiao"}]},"autoDesc":true,"filePathRelative":"前端技术/一键提交表单与附件.md","categoryList":[{"id":"40d75c","sort":10004,"name":"前端技术"}]}`);export{r as comp,o as data};
